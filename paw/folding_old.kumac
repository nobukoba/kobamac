macro main [hid] [hid2] [sigma]
  if [hid] = '' .or. [hid2] = '' .or. [sigma] = '' then
     message
     message please input HID newHID SIGMA !
     message
     exitm
  endif

*  hid2 = 101
*  while $hexist([hid2]) .eq. 1 do
*    hid2 = [hid2] + 1
*  endwhile

  xbins = $hinfo([hid],'xbins')
  xmax = $hinfo([hid],'xmax')
  xmin = $hinfo([hid],'xmin')
  dx  = ([xmax] - [xmin])/[xbins]

  vec/cre y_fold([xbins]) r
  vec/cre y_unfold([xbins]) r
  hi/get/con [hid] y_unfold

  do i=1,[xbins]
     y_unfold_val[i] = y_unfold([i])
  enddo

  y_sum = 0
  do j=1,4*[xbins]-1
    x_prm = [dx] * ([j]-2*[xbins])
    y_sum = [y_sum] + $EXEC('fold_func [x_prm] [sigma]')
  enddo

  do k=-[xbins]+1,[xbins]-1
    x_prm   = [dx] * [k]
    ff_val[k] = $EXEC('fold_func [x_prm] [sigma]') / [y_sum]
  enddo

  do i=1,[xbins]
    y_fold_val[i] = 0
    do j=1,[xbins]
      k = [i] - [j]
      y_fold_val[i] = [y_fold_val[i]] + [y_unfold_val[j]] * [ff_val[k]]
    enddo
  enddo

  do i=1,[xbins]
     vec/input y_fold([i]) [y_fold_val[i]]
  enddo

  title = $htitle([hid])
  1dhist [hid2] 'Fold.('//$QUOTE([title])//')' [xbins] [xmin] [xmax]
  hi/put/con [hid2] y_fold
  ht [hid2]

  vec/del y_fold
  vec/del y_unfold
return


macro fold_func [x] [sigma]
  y = $sigma(exp(-1*[x]/[sigma]*[x]/[sigma]/2))
exitm [y]
