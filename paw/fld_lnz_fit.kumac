 macro main [hid]
   
   vec/cre par(2) r 50000000. 1000.
   
   exe def_func [hid]
   
   hi/fit [hid](0.:2000.) fit_func ! 2 par
   
 return
 
 macro def_func [hid]
   vec/cre hidls(3) 'i' [hid] 900 901
   
* exe kumac/kobamac/def_folding
* exe kumac/kobamac/def_folding
   exe /home/koba/Dropbox/cern/paw/kobakmc/def_folding
   APP COMIS QUIT
      REAL FUNCTION fit_func(x)
      
      integer npar
      parameter (npar=2)

      COMMON/PAWPAR/par(npar)
      COMMON/SAVE/spar(npar)
      vector hidls
      
      CHARACTER*32 titl
      INTEGER xbins,ndum
      REAL xmin,xmax,dum
      REAL dx,xx,yy,gamma,lorentzian
      REAL res
      INTEGER i,div
      LOGICAL chg
      div=3
      
      chg = .FALSE.
      DO i=1,npar
	IF (par(i).ne.spar(i)) THEN
	  chg = .TRUE.
	  spar(i)=par(i)
	ENDIF
      ENDDO
      
      IF (.not. chg) THEN
	fit_func=c*HX(hidls(3),x)
	call hfind(hidls(1),' ')
	RETURN
      ENDIF
      
      c=par(1)
      gamma=par(2)
      res=200.
      
      CALL HGIVE (hidls(1),titl,xbins,xmin,
     &                  xmax,ndum,dum,dum,ndum,ndum)
      IF HEXIST(hidls(2)) THEN
	CALL HDELET(hidls(2))
      ENDIF
      CALL HBOOK1(hidls(2),'lnz',    xbins*div,xmin,xmax,0.)
      
      dx=(xmax-xmin)/float(xbins)/float(div)
      
      DO i=1,xbins*div
	xx=xmin+dx*(i-0.5)
	yy=lorentzian(xx,gamma)
	CALL HF1(hidls(2),xx,yy)
      ENDDO
      
      CALL folding(hidls(2),hidls(3),res,0.)
      
      fit_func=c*HX(hidls(3),x)
      call hfind(hidls(1),' ')
     
      RETURN
      END
 
      real function lorentzian(x,gamma)
      implicit none
      real x,gamma
      real pi
      pi = 3.14159265358
      
      gamma=abs(gamma)
      lorentzian = (1./pi)*(0.5*gamma)/(x**2+(0.5*gamma)**2)
      return
      end

    QUIT
    
  return
